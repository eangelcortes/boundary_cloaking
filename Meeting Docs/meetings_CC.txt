Meeting 7/9/19:

-we'll make a poster anyway despite not participating to UROC: goal will be to present at SIAM central valley conference (April 2020)
-ask about why removing .simplify() made a big change to M. Bussonnier
-if the data f is the fundamental solution then u us the same. Plot the error instead (OK)
-play with ip widget/volume at some point for make interactive (change M, change k, etc.) Look at previous project if needed.
-separate cells for vizualization (helps not recomputing everything). Three sections: initializations, core, post-processing (OK)
-problem ploting ? When f is a plane wave the result if weird ? ANSWER: it was not a plane wave (but cool idea, just check it is solution of Helmholtz ?) (OK)
-fun exercise: is the plane wave solution of Helmholtz ?
-write properly what we discussed on the board (notations, calculus, etc)
-for interior, "replace" nu by -nu (create another jupyter notebook)


Meeting 7/11/19:
-put all notebooks together (OK)
-question of the BIE interior (is there a -1/2)
-once things are set make a single ipynb with Helmholtz. Called Acoustic scattering maybe ?
-be a little careful with f: (x0,y0) better outside of the computational domain to avoid singularities
-make error plots with the Hankel function for both exterior and interior
for interior: the BIE slightly changes (we can discuss the reason why). 1/2mu becomes -1/2mu. Doesn't need -1/2 apparently.

Meeting 7/16/19:
- exterior Acoustic PTR: error plot ok but seems a bit off. Test with a circle. Error non homogeneous. clues: index issue, error in the expressions? coming np.trapz ? Maybe E_C ?
-talked about the transmission problem, make sure to understand them and start tasks 3,4,5 (take the time to check).
-Dont forget to pull, make changes ,commit, push.

to do for Thursday: investigaer the non uniformity of the error (see questions above ? try to change the source ?maybe the TRUE plane wave)
to do for next Tuesday: talk about the poster


Meeting 7/18/19:
-issue resolved for the error plot: periodicity and np.trapz were the problem
-investigate why trapz makes a difference (bigger error)
-interior: error looks weird, might be an issue the signs
-math issue on the interior acoustic (leave it as is for now), move forward to tasks 3,4


Meeting 7/23/19:
-talked about poster, structure set. To do: a first full draft by Tuesday
-investigate why trapz makes a difference (bigger error)
-interior: error looks weird, might be an issue the signs: ISSUE WITH EIGENVALUES 
-exterior representation formula: remove hardcoding, redefine def_f function, add documentation for makegrid and def_f functions (copy to all notebooks)
-interior representation formula: copy exterior rep and modify, as well as above tasks listed for exterior
-check code for tasks 3 and 4, try with different solutions (Hankel, plane wave, ...) and different boundaries ( circle, star, etc...) and see how error looks like
-Task 5, check for ke = ki and f = plane wave, compare data (u and dvu) to exact solution which you can find, combine A's

Meeting 7/30/19:
-clean up the transmission .ipynb (follow guidelines) and make it public
-play with rendering (plotly or plt)
-print some plots for the poster session on Friday
-check over the notebook if what you wrote as equations is what you implement (for example track the k_ratio, etc)

Meeting 8/1/19:
Transmission problem: -check if the the parameters are at the right place (k_ratio, etc)
					  -test k_i = k_e for different boundary shapes (is there any issue ?)
					  -case k_i \neq k_e the solution is still not continuous... Problem here ? investigate
					  -write the intro and motivation
					  -add references

Meeting 8/7/19:
- Check the periodity of cosine and sine from sympy and numpy (is it 0 to 2pi or -pi to pi)
- Bonus: Change preliminary to plotly styled views
- Check other boundaries, see if Star is not the only one with factored error (Kite?) Curvature?
	Use Matlab code to see if boundary data being computed for star and kite boundaries are correct
	Try putting .simplify() back in (for curvature and Jacobian of boundary)
	Try checking lambdify section, is it correctly lambdifying the functions of the boundary?
- Add current issues to bottom of notebook for documentation
- Separate exact solution calculation from make_solution_grid function - use x and y from make_solution_grid to calculate the exact instead
- Implement widgets to make notebook cleaner
- Add more comments throughout the notebook about what the code is doing
	Also comment after each plot (especially the error plots)
- Make a text file with unresolved issues in repository (public now, may find a solution)
- Bonus: Make a document regarding changes and implementations for moving on to three layers (what needs to be improved and done for the next step)
- Prepare Independent Study form for next semester


Meeting 8/29/19: FALL SEMESTER PROJECT 
-resolved the shape problem by scaling the colorbars
-to do: cleanup the code !!
-think about tabs to compute one problem at a time.
-prepare slide for research meeting

Meeting 9/12:

- get rid of ; in the .ipynb, and future ones
- investigate pltly and surfaces rendering issues (potential bug report ?)
- make sure your function do not rely on global variables.
- $ pip install line_profiler, or $ conda install line_profiler
- do not compute logterm(n-m) each time in the loop, precompute an array of lorgterm(i) for i in -M:M and then loopup in this array. 
-try to astart some changes, and think about what could be done for the second function


Meeting 9/26:
- Work on NCUWM Abstract, submission between 10/1 and 10/8
- Continue working on optimization of make_solution grid -> split into make_grid and find_solution
- Move optimized functions into cloaking notebook -> clean them up, remove commented lines
- Begin working on slides for presentation in November
	Transfer information from poster into slides